# This workflow will build a docker container, publish it to Azure Container Registry, and deploy it to Azure Kubernetes Service using a helm chart.
#
# To configure this workflow:
#
# 1. Set up the following secrets in your workspace: 
#     a. REGISTRY_USERNAME with ACR username
#     b. REGISTRY_PASSWORD with ACR Password
#     c. AZURE_CREDENTIALS with the output of `az ad sp create-for-rbac --sdk-auth`
#
# 2. Change the values for the REGISTRY_NAME, CLUSTER_NAME, CLUSTER_RESOURCE_GROUP and NAMESPACE environment variables (below).

on:
  workflow_dispatch:
    # Inputs the workflow accepts.
    inputs:
      deployInfra: 
        # Friendly description to be shown in the UI instead of 'name'
        description: 'Would you like to deploy the infrastructure? ($true or $false)'
        # Default value if no value is explicitly provided
        default: '$true'
        # Input has to be provided for the workflow to run
        required: false
defaults:
  run:
    working-directory: deploy

# Environment variables available to all jobs and steps in this workflow
env:
  REGISTRY_NAME: ${{ secrets.REGISTRY_NAME }}
  CLUSTER_NAME: ${{ secrets.CLUSTER_NAME }}
  CLUSTER_RESOURCE_GROUP: ${{ secrets.CLUSTER_RG }}
  REGISTRY_ENDPOINT: ${{ secrets.REGISTRY_ENDPOINT }}
  NAMESPACE: default
  WORKSPACE: $GITHUB_WORKSPACE
  ACR_USERNAME: ${{ secrets.USERNAME }}
  ACR_PASSWORD: ${{ secrets.PASSWORD }}
  DEPLOY_INFRA: ${{ github.event.inputs.deployInfra }}

jobs:

  release:
    runs-on: windows-latest
    steps:
    - name: Checkout
      uses: actions/checkout@v2

    - name: Login via Az module
      uses: azure/login@v1
      with:
        creds: ${{secrets.AZ_CREDENTIALS}}
        enable-AzPSSession: true 
        
    - name: Run Azure PowerShell script
      uses: azure/powershell@v1
      with:
        inlineScript: |
          az --version
          cd $Env:GITHUB_WORKSPACE/deploy/k8s/helm
          az aks get-credentials --resource-group $Env:CLUSTER_RESOURCE_GROUP --name $Env:CLUSTER_NAME 
          . $Env:GITHUB_WORKSPACE/deploy/k8s/helm/deploy-all.ps1 -externalDns aks -aksName $Env:CLUSTER_NAME -aksRg $Env:CLUSTER_RESOURCE_GROUP -imageTag linux-dev -registry $Env:REGISTRY_NAME.azurecr.io -dockerUser $Env:ACR_USERNAME -dockerPassword $Env:ACR_PASSWORD -deployInfrastructure $Env:DEPLOY_INFRA -useMesh $false              
          kubectl get deployment
          kubectl get ingresses -o jsonpath='{.spec.rules[*].host}{.spec.rules[*].http.paths[*].path}' eshop-webspa 
          kubectl get ingresses -o jsonpath='{.spec.rules[*].host}{.spec.rules[*].http.paths[*].path}' eshop-webmvc 
        azPSVersion: '3.1.0'

        
